{"version":3,"sources":["component/Sidebar.js","shared/NavBar.js","shared/Footer.js","App.js","serviceWorker.js","index.js"],"names":["SidebarItem","label","items","depthStep","depth","rest","ListItem","button","dense","ListItemText","style","paddingLeft","Array","isArray","List","disablePadding","className","map","subItem","key","name","Sidebar","sidebarItem","index","NavBar","AppBar","position","Toolbar","Typography","variant","color","Copyright","target","href","Date","getFullYear","useStyles","makeStyles","theme","root","display","flexDirection","minHeight","main","marginTop","spacing","marginBottom","footer","padding","backgroundColor","palette","type","grey","Footer","classes","Container","maxWidth","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gRAKA,SAASA,EAAT,GAA4E,IAArDC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,MAA6C,IAAtCC,iBAAsC,MAA1B,GAA0B,MAAtBC,aAAsB,MAAd,EAAc,EAARC,EAAQ,qDACvE,OACE,6BACE,kBAACC,EAAA,EAAD,eAAUC,QAAM,EAACC,OAAK,GAAKH,GACzB,kBAACI,EAAA,EAAD,CAAcC,MAAO,CAAEC,YAAaP,EAAQD,IAC1C,8BAAOF,KAGVW,MAAMC,QAAQX,GACb,kBAACY,EAAA,EAAD,CAAMC,gBAAc,EAACP,OAAK,EAACQ,UAAU,YAClCd,EAAMe,KAAI,SAACC,GAAD,OACT,kBAAClB,EAAD,eACEmB,IAAKD,EAAQE,KACbhB,MAAOA,EAAQ,EACfD,UAAWA,EACXa,UAAU,YACNE,QAIR,MAsBGG,MAjBb,YAA+C,IAA5BnB,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,MACnC,OACE,yBAAKY,UAAU,WACb,kBAACF,EAAA,EAAD,CAAMC,gBAAc,EAACP,OAAK,GACvBN,EAAMe,KAAI,SAACK,EAAaC,GAAd,OACT,kBAACvB,EAAD,eACEmB,IAAG,UAAKG,EAAYF,MAAjB,OAAwBG,GAC3BpB,UAAWA,EACXC,MAAOA,GACHkB,U,wBCpBHE,EAdA,WACb,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,WAA/B,sC,gBCHV,SAASC,IACP,OACE,kBAACH,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAC/B,kBACD,uBAAGA,MAAM,UAAUE,OAAO,SAC1BC,KAAK,+DADL,kCAGK,KACJ,IAAIC,MAAOC,cACX,KAKP,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,UAAW,QAEbC,KAAM,CACJC,UAAWN,EAAMO,QAAQ,GACzBC,aAAcR,EAAMO,QAAQ,IAE9BE,OAAQ,CACNC,QAASV,EAAMO,QAAQ,EAAG,GAC1BD,UAAW,OACXK,gBACyB,UAAvBX,EAAMY,QAAQC,KAAmBb,EAAMY,QAAQE,KAAK,KAAOd,EAAMY,QAAQE,KAAK,UAIrE,SAASC,IACtB,IAAMC,EAAUlB,IAEhB,OACE,yBAAKpB,UAAWsC,EAAQf,MACtB,4BAAQvB,UAAWsC,EAAQP,QACzB,kBAACQ,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC5B,EAAA,EAAD,CAAYC,QAAQ,SAApB,kEACA,kBAACE,EAAD,SC1CV,IAAM7B,EAAQ,CACZ,CAAEkB,KAAM,OAAQnB,MAAO,QACvB,CACEmB,KAAM,UACNnB,MAAO,UACPC,MAAO,CACL,CAAEkB,KAAM,aAAcnB,MAAO,cAC7B,CAAEmB,KAAM,UAAWnB,MAAO,aAG9B,CACEmB,KAAM,WACNnB,MAAO,WACPC,MAAO,CACL,CAAEkB,KAAM,UAAWnB,MAAO,WAC1B,CAAEmB,KAAM,YAAanB,MAAO,aAC5B,CACEmB,KAAM,gBACNnB,MAAO,gBACPC,MAAO,CACL,CAAEkB,KAAM,QAASnB,MAAO,SACxB,CACEmB,KAAM,UACNnB,MAAO,UACPC,MAAO,CACL,CAAEkB,KAAM,WAAYnB,MAAO,YAC3B,CAAEmB,KAAM,YAAanB,MAAO,eAGhC,CAAEmB,KAAM,MAAOnB,MAAO,YAiBjBwD,EAVH,WACV,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASvD,MAAOA,IAChB,kBAACmD,EAAD,Q,MClCcK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4dcb3f5b.chunk.js","sourcesContent":["import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nfunction SidebarItem({ label, items, depthStep = 10, depth = 0, ...rest }) {\n    return (\n      <div>\n        <ListItem button dense {...rest}>\n          <ListItemText style={{ paddingLeft: depth * depthStep }}>\n            <span>{label}</span>\n          </ListItemText>\n        </ListItem>\n        {Array.isArray(items) ? (\n          <List disablePadding dense className=\"listItem\">\n            {items.map((subItem) => (\n              <SidebarItem\n                key={subItem.name}\n                depth={depth + 1}\n                depthStep={depthStep}\n                className=\"listItem\"\n                {...subItem}\n              />\n            ))}\n          </List>\n        ) : null}\n      </div>\n    )\n  }\n  \n  function Sidebar({ items, depthStep, depth }) {\n    return (\n      <div className=\"sidebar\">\n        <List disablePadding dense>\n          {items.map((sidebarItem, index) => (\n            <SidebarItem\n              key={`${sidebarItem.name}${index}`}\n              depthStep={depthStep}\n              depth={depth}\n              {...sidebarItem}\n            />\n          ))}\n        </List>\n      </div>\n    )\n  }\n\nexport default Sidebar;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst NavBar = () => {\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h5\" color=\"inherit\">\n            React Material UI - Navigation\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default NavBar;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {'Copyright Â© '}\n      <a color=\"inherit\" target='_blank' \n      href=\"https://github.com/dhirajsonavane/react-material-navigation\">\n      React Material UI - Navigation\n      </a>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '10vh',\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\">Website created by Dhiraj Sonavane (dhiraj.sonavane@gmail.com)</Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n}","import React from \"react\";\nimport Sidebar from \"./component/Sidebar\";\nimport NavBar from \"./shared/NavBar\";\nimport Footer from \"./shared/Footer\";\n\nconst items = [\n  { name: \"home\", label: \"Home\" },\n  {\n    name: \"billing\",\n    label: \"Billing\",\n    items: [\n      { name: \"statements\", label: \"Statements\" },\n      { name: \"reports\", label: \"Reports\" },\n    ],\n  },\n  {\n    name: \"settings\",\n    label: \"Settings\",\n    items: [\n      { name: \"profile\", label: \"Profile\" },\n      { name: \"insurance\", label: \"Insurance\" },\n      {\n        name: \"notifications\",\n        label: \"Notifications\",\n        items: [\n          { name: \"email\", label: \"Email\" },\n          {\n            name: \"desktop\",\n            label: \"Desktop\",\n            items: [\n              { name: \"schedule\", label: \"Schedule\" },\n              { name: \"frequency\", label: \"Frequency\" },\n            ],\n          },\n          { name: \"sms\", label: \"SMS\" },\n        ],\n      },\n    ],\n  },\n];\n\nconst App = () => {\n  return (\n    <div>\n      <NavBar />\n      <Sidebar items={items} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()"],"sourceRoot":""}